digraph {
n0 [label="root (CompilationUnit)"];
n1 [label="imports"];
n0 -> n1;
n2 [label="import (ImportDeclaration)"];
n1 -> n2;
n3 [label="isAsterisk='false'"];
n2 -> n3;
n4 [label="isStatic='false'"];
n2 -> n4;
n5 [label="name (Name)"];
n2 -> n5;
n6 [label="identifier='Timestamp'"];
n5 -> n6;
n7 [label="qualifier (Name)"];
n5 -> n7;
n8 [label="identifier='sql'"];
n7 -> n8;
n9 [label="qualifier (Name)"];
n7 -> n9;
n10 [label="identifier='java'"];
n9 -> n10;
n11 [label="types"];
n0 -> n11;
n12 [label="type (ClassOrInterfaceDeclaration)"];
n11 -> n12;
n13 [label="isInterface='false'"];
n12 -> n13;
n14 [label="name (SimpleName)"];
n12 -> n14;
n15 [label="identifier='SimpleProgram'"];
n14 -> n15;
n16 [label="members"];
n12 -> n16;
n17 [label="member (MethodDeclaration)"];
n16 -> n17;
n18 [label="body (BlockStmt)"];
n17 -> n18;
n19 [label="statements"];
n18 -> n19;
n20 [label="statement (ExpressionStmt)"];
n19 -> n20;
n21 [label="expression (VariableDeclarationExpr)"];
n20 -> n21;
n22 [label="variables"];
n21 -> n22;
n23 [label="variable (VariableDeclarator)"];
n22 -> n23;
n24 [label="initializer (StringLiteralExpr)"];
n23 -> n24;
n25 [label="value='passwd1234'"];
n24 -> n25;
n26 [label="name (SimpleName)"];
n23 -> n26;
n27 [label="identifier='password'"];
n26 -> n27;
n28 [label="type (ClassOrInterfaceType)"];
n23 -> n28;
n29 [label="name (SimpleName)"];
n28 -> n29;
n30 [label="identifier='String'"];
n29 -> n30;
n31 [label="comment (LineComment)"];
n20 -> n31;
n32 [label="content=' HardCodedSecretCheck'"];
n31 -> n32;
n33 [label="statement (ExpressionStmt)"];
n19 -> n33;
n34 [label="expression (VariableDeclarationExpr)"];
n33 -> n34;
n35 [label="variables"];
n34 -> n35;
n36 [label="variable (VariableDeclarator)"];
n35 -> n36;
n37 [label="initializer (StringLiteralExpr)"];
n36 -> n37;
n38 [label="value='php_12dc'"];
n37 -> n38;
n39 [label="name (SimpleName)"];
n36 -> n39;
n40 [label="identifier='tokentest'"];
n39 -> n40;
n41 [label="type (ClassOrInterfaceType)"];
n36 -> n41;
n42 [label="name (SimpleName)"];
n41 -> n42;
n43 [label="identifier='String'"];
n42 -> n43;
n44 [label="statement (ExpressionStmt)"];
n19 -> n44;
n45 [label="expression (VariableDeclarationExpr)"];
n44 -> n45;
n46 [label="variables"];
n45 -> n46;
n47 [label="variable (VariableDeclarator)"];
n46 -> n47;
n48 [label="name (SimpleName)"];
n47 -> n48;
n49 [label="identifier='mylist'"];
n48 -> n49;
n50 [label="type (ClassOrInterfaceType)"];
n47 -> n50;
n51 [label="name (SimpleName)"];
n50 -> n51;
n52 [label="identifier='List'"];
n51 -> n52;
n53 [label="scope (ClassOrInterfaceType)"];
n50 -> n53;
n54 [label="name (SimpleName)"];
n53 -> n54;
n55 [label="identifier='util'"];
n54 -> n55;
n56 [label="scope (ClassOrInterfaceType)"];
n53 -> n56;
n57 [label="name (SimpleName)"];
n56 -> n57;
n58 [label="identifier='java'"];
n57 -> n58;
n59 [label="typeArguments"];
n50 -> n59;
n60 [label="typeArgument (ClassOrInterfaceType)"];
n59 -> n60;
n61 [label="name (SimpleName)"];
n60 -> n61;
n62 [label="identifier='String'"];
n61 -> n62;
n63 [label="comment (LineComment)"];
n44 -> n63;
n64 [label="content=' Noncompilant'"];
n63 -> n64;
n65 [label="statement (ExpressionStmt)"];
n19 -> n65;
n66 [label="expression (VariableDeclarationExpr)"];
n65 -> n66;
n67 [label="variables"];
n66 -> n67;
n68 [label="variable (VariableDeclarator)"];
n67 -> n68;
n69 [label="name (SimpleName)"];
n68 -> n69;
n70 [label="identifier='tstamp'"];
n69 -> n70;
n71 [label="type (ClassOrInterfaceType)"];
n68 -> n71;
n72 [label="name (SimpleName)"];
n71 -> n72;
n73 [label="identifier='Timestamp'"];
n72 -> n73;
n74 [label="comment (LineComment)"];
n65 -> n74;
n75 [label="content=' Compilant'"];
n74 -> n75;
n76 [label="type (VoidType)"];
n17 -> n76;
n77 [label="name (SimpleName)"];
n17 -> n77;
n78 [label="identifier='main'"];
n77 -> n78;
n79 [label="parameters"];
n17 -> n79;
n80 [label="parameter (Parameter)"];
n79 -> n80;
n81 [label="isVarArgs='false'"];
n80 -> n81;
n82 [label="name (SimpleName)"];
n80 -> n82;
n83 [label="identifier='args'"];
n82 -> n83;
n84 [label="type (ArrayType)"];
n80 -> n84;
n85 [label="origin='TYPE'"];
n84 -> n85;
n86 [label="componentType (ClassOrInterfaceType)"];
n84 -> n86;
n87 [label="name (SimpleName)"];
n86 -> n87;
n88 [label="identifier='String'"];
n87 -> n88;
n89 [label="member (MethodDeclaration)"];
n16 -> n89;
n90 [label="body (BlockStmt)"];
n89 -> n90;
n91 [label="statements"];
n90 -> n91;
n92 [label="statement (IfStmt)"];
n91 -> n92;
n93 [label="condition (BinaryExpr)"];
n92 -> n93;
n94 [label="operator='EQUALS'"];
n93 -> n94;
n95 [label="left (NameExpr)"];
n93 -> n95;
n96 [label="name (SimpleName)"];
n95 -> n96;
n97 [label="identifier='x'"];
n96 -> n97;
n98 [label="right (IntegerLiteralExpr)"];
n93 -> n98;
n99 [label="value='16'"];
n98 -> n99;
n100 [label="elseStmt (IfStmt)"];
n92 -> n100;
n101 [label="condition (BinaryExpr)"];
n100 -> n101;
n102 [label="operator='EQUALS'"];
n101 -> n102;
n103 [label="left (NameExpr)"];
n101 -> n103;
n104 [label="name (SimpleName)"];
n103 -> n104;
n105 [label="identifier='x'"];
n104 -> n105;
n106 [label="right (IntegerLiteralExpr)"];
n101 -> n106;
n107 [label="value='17'"];
n106 -> n107;
n108 [label="thenStmt (BlockStmt)"];
n100 -> n108;
n109 [label="thenStmt (BlockStmt)"];
n92 -> n109;
n110 [label="type (VoidType)"];
n89 -> n110;
n111 [label="name (SimpleName)"];
n89 -> n111;
n112 [label="identifier='foo_camel'"];
n111 -> n112;
n113 [label="comment (LineComment)"];
n89 -> n113;
n114 [label="content=' IfElseIfStatementEndsWithElseCheck'"];
n113 -> n114;
}